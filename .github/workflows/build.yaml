name: Rust-Cargo Build

on:
  push:
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/build.yaml'
  workflow_dispatch:
    inputs:
      version:
        description: Terracotta Version
        type: string

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  name: terracotta
  RUST_BACKTRACE: full

defaults:
  run:
    shell: bash

jobs:
  build-windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: windows-latest
            os: windows
            arch: x86_64
            target: x86_64-pc-windows-msvc
          - runs-on: windows-latest
            os: windows
            arch: x86_64
            target: x86_64-pc-windows-gnu
          - runs-on: windows-11-arm
            os: windows
            arch: arm64
            target: aarch64-pc-windows-msvc
    runs-on: ${{ matrix.runs-on }}
    name: Build (${{ matrix.target }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          toolchain: nightly
          target: ${{ matrix.target }}
          args: --release
          strip: true
      - name: Upload Artifact
        uses: actions/upload-artifact@v5
        with:
          name: terracotta-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/terracotta.exe
          retention-days: 1
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: ubuntu-24.04
            os: linux
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          - runs-on: ubuntu-24.04
            os: linux
            arch: x86_64
            target: x86_64-unknown-linux-musl
          - runs-on: ubuntu-24.04-arm
            os: linux
            arch: arm64
            target: aarch64-unknown-linux-gnu
          - runs-on: ubuntu-24.04-arm
            os: linux
            arch: arm64
            target: aarch64-unknown-linux-musl
          - runs-on: ubuntu-24.04
            os: linux
            arch: riscv64
            target: riscv64gc-unknown-linux-gnu
          - runs-on: ubuntu-24.04
            os: linux
            arch: riscv64
            target: riscv64gc-unknown-linux-musl
          - runs-on: ubuntu-24.04
            os: linux
            arch: loongarch64
            target: loongarch64-unknown-linux-gnu
          - runs-on: ubuntu-24.04
            os: linux
            arch: loongarch64
            target: loongarch64-unknown-linux-musl
          - runs-on: ubuntu-24.04
            os: freebsd
            arch: x86_64
            target: x86_64-unknown-freebsd
    runs-on: ${{ matrix.runs-on }}
    name: Build (${{ matrix.target }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          toolchain: nightly
          target: ${{ matrix.target }}
          args: --release
          strip: true
      - name: Upload Artifact
        uses: actions/upload-artifact@v5
        with:
          name: terracotta-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/terracotta
          retention-days: 1
  build-macos:
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: macos-15-intel
            os: macos
            arch: x86_64
            target: x86_64-apple-darwin
          - runs-on: macos-latest
            os: macos
            arch: arm64
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.runs-on }}
    name: Build (${{ matrix.target }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          toolchain: nightly
          target: ${{ matrix.target }}
          args: --release
          strip: true
      - name: Upload Artifact
        uses: actions/upload-artifact@v5
        with:
          name: terracotta-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/terracotta
          retention-days: 1
      - name: Package Artifact
        run: |
          cp "target/${{ matrix.target }}/release/terracotta" "build/macos/terracotta.app/Contents/MacOS/terracotta"
          pkgbuild \
            --root "build/macos" \
            --identifier "net.burningtnt.terracotta" \
            --version "1.0" \
            --install-location "/Applications" \
            --scripts build/macos/scripts \
            --component-plist build/macos/terracotta.plist \
            target/${{ matrix.target }}/release/terracotta.pkg
      - name: Upload Package Artifact
        uses: actions/upload-artifact@v5
        with:
          name: terracotta-${{ matrix.target }}.pkg
          path: target/${{ matrix.target }}/release/terracotta.pkg
          retention-days: 1
  assemble-packages:
    runs-on: ubuntu-latest
    name: Assemble Artifact
    needs:
      - build-windows
      - build-linux
      - build-macos
    steps:
      - name: Compute Version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "TERRACOTTA_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
          else
            echo "TERRACOTTA_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          merge-multiple: true
      - name: Assemble Artifacts
        run: |
          ls -R
  # assemble-packages:
  #   runs-on: ubuntu-latest
  #   name: Assemble Artifact
  #   needs:
  #     - build-windows
  #     - build-linux
  #     - build-macos
  #   steps:
  #     - name: Install GitHub Artifact Client
  #       uses: lhotari/gh-actions-artifact-client@v2
  #     - name: Compute Version
  #       run: |
  #         if [ -z "${{ github.event.inputs.version }}" ]; then
  #           echo "TERRACOTTA_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
  #         else
  #           echo "TERRACOTTA_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
  #         fi
  #     - name: Assemble Artifacts
  #       run: |
  #         artifacts_direct=(
  #           "terracotta-${TERRACOTTA_VERSION}-windows-x86_64.exe"
  #           "terracotta-${TERRACOTTA_VERSION}-windows-arm64.exe"
  #           "terracotta-${TERRACOTTA_VERSION}-macos-x86_64.pkg"
  #           "terracotta-${TERRACOTTA_VERSION}-macos-arm64.pkg"
  #         )
  #         artifacts_tar=(
  #           "terracotta-${TERRACOTTA_VERSION}-linux-x86_64"
  #           "terracotta-${TERRACOTTA_VERSION}-linux-arm64"
  #           "terracotta-${TERRACOTTA_VERSION}-linux-riscv64"
  #           "terracotta-${TERRACOTTA_VERSION}-linux-loongarch64"
  #           "terracotta-${TERRACOTTA_VERSION}-freebsd-x86_64"
  #           "terracotta-${TERRACOTTA_VERSION}-macos-x86_64"
  #           "terracotta-${TERRACOTTA_VERSION}-macos-arm64"
  #         )
          
  #         file=$(mktemp -t XXXXXX.zip)
  #         for artifact in "${artifacts_direct[@]}"; do
  #           gh-actions-artifact-client.js download "$artifact" > "$file"
  #           unzip -p "$file" > "$artifact"
  #         done
  #         for artifact in "${artifacts_tar[@]}"; do
  #           gh-actions-artifact-client.js download "$artifact.tar" > "$file"
  #           unzip -p "$file" | tar -xOf - > "$artifact"
  #         done
  #         rm "$file"
          
  #         chmod 755 terracotta-${TERRACOTTA_VERSION}-*
  #         7z -m0=LZMA2 -mx=9 -ms=on a terracotta.7z terracotta-${TERRACOTTA_VERSION}-*
  #         zip -r - terracotta.7z | gh-actions-artifact-client.js upload "terracotta-${TERRACOTTA_VERSION}-all.7z"
          
  #         if [ ! -z "${{ github.event.inputs.version }}" ]; then
  #           tar -czvf terracotta-${TERRACOTTA_VERSION}-windows-x86_64-pkg.tar.gz terracotta-${TERRACOTTA_VERSION}-windows-x86_64.exe
  #           tar -czvf terracotta-${TERRACOTTA_VERSION}-windows-arm64-pkg.tar.gz terracotta-${TERRACOTTA_VERSION}-windows-arm64.exe
  #           tar -czvf terracotta-${TERRACOTTA_VERSION}-linux-x86_64-pkg.tar.gz terracotta-${TERRACOTTA_VERSION}-linux-x86_64
  #           tar -czvf terracotta-${TERRACOTTA_VERSION}-linux-arm64-pkg.tar.gz terracotta-${TERRACOTTA_VERSION}-linux-arm64
  #           tar -czvf terracotta-${TERRACOTTA_VERSION}-linux-riscv64-pkg.tar.gz terracotta-${TERRACOTTA_VERSION}-linux-riscv64
  #           tar -czvf terracotta-${TERRACOTTA_VERSION}-linux-loongarch64-pkg.tar.gz terracotta-${TERRACOTTA_VERSION}-linux-loongarch64
  #           tar -czvf terracotta-${TERRACOTTA_VERSION}-freebsd-x86_64-pkg.tar.gz terracotta-${TERRACOTTA_VERSION}-freebsd-x86_64
          
  #           tar -czvf terracotta-${TERRACOTTA_VERSION}-macos-x86_64-pkg.tar.gz terracotta-${TERRACOTTA_VERSION}-macos-x86_64 terracotta-${TERRACOTTA_VERSION}-macos-x86_64.pkg
  #           tar -czvf terracotta-${TERRACOTTA_VERSION}-macos-arm64-pkg.tar.gz terracotta-${TERRACOTTA_VERSION}-macos-arm64 terracotta-${TERRACOTTA_VERSION}-macos-arm64.pkg
          
  #           gh release create v"${{ github.event.inputs.version }}" -R "${{ github.repository }}" --draft --generate-notes terracotta-${TERRACOTTA_VERSION}-*
  #         fi
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
